def modules = []
configure(allprojects - project(':modules')) {
    apply plugin: 'eclipse'
    apply plugin: 'java'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    dependencies {
        compile fileTree(dir: 'libs', include: '*.jar')
    }
    if (path.startsWith(":modules:")) {
        println "Found module $name"
        modules << path
    }
}

// For the main project

archivesBaseName = 'CustomEnchantmentAPI'
group = 'adx.audioxd.customenchantmentapi'
version = '2.3-RELEASE'

dependencies {
    compile(project(':modules:API')) {
        transitive = false
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'plugin.yml'

        expand 'plugin_name': project.archivesBaseName,
                'plugin_version': project.version,
                'plugin_main': project.group + '.' + project.archivesBaseName
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'plugin.yml'
        exclude '**/*.dev'
    }
}

jar {
    from files(modules.collect {
        project(it).sourceSets.main.output
    })
}

uploadArchives {
    repositories {
        flatDir {
            dirs '/output'
        }
        flatDir {
            dirs '../_extra/_out'
        }
        flatDir {
            dirs '../_extra/run/plugins'
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

task javadocZip(type: Zip, dependsOn: javadoc) {
    from "build/docs/javadoc"
    baseName = "CEAPI-javadoc"
    into('/')
    destinationDir file('/output')
}